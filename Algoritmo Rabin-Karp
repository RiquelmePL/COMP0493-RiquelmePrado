#include <iostream>
#include <string>
#include <vector>
using namespace std;

#define d 256 

void RabinKarp(string text, string pattern, int q) {
    int m = pattern.length();
    int n = text.length();
    int p = 0; 
    int t = 0; 
    int h = 1;

    for (int i = 0; i < m - 1; i++) {
        h = (h * d) % q;
    }

    for (int i = 0; i < m; i++) {
        p = (d * p + pattern[i]) % q;
        t = (d * t + text[i]) % q;
    }

    for (int i = 0; i <= n - m; i++) {
        if (p == t) {
            int j;
            for (j = 0; j < m; j++) {
                if (text[i + j] != pattern[j]) {
                    break;
                }
            }

            if (j == m) {
                cout << "Padrão encontrado na posição " << i << endl;
            }
        }

        if (i < n - m) {
            t = (d * (t - text[i] * h) + text[i + m]) % q;

            if (t < 0) {
                t += q;
            }
        }
    }
}
